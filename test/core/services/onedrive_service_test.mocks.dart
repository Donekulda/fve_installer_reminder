// Mocks generated by Mockito 5.4.6 from annotations
// in fve_installer_reminder/test/core/services/onedrive_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:convert' as _i10;
import 'dart:typed_data' as _i12;
import 'dart:ui' as _i16;

import 'package:fve_installer_reminder/core/config/config_service.dart' as _i17;
import 'package:fve_installer_reminder/core/services/database_service.dart'
    as _i3;
import 'package:fve_installer_reminder/core/services/image_storage_service.dart'
    as _i4;
import 'package:fve_installer_reminder/core/services/image_sync_service.dart'
    as _i7;
import 'package:fve_installer_reminder/core/services/local_database_service.dart'
    as _i5;
import 'package:fve_installer_reminder/core/services/onedrive_service.dart'
    as _i6;
import 'package:fve_installer_reminder/core/services/service_factory.dart'
    as _i8;
import 'package:fve_installer_reminder/data/models/fve_installation.dart'
    as _i14;
import 'package:fve_installer_reminder/data/models/user.dart' as _i15;
import 'package:fve_installer_reminder/state/app_state.dart' as _i13;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamedResponse_1 extends _i1.SmartFake
    implements _i2.StreamedResponse {
  _FakeStreamedResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseService_2 extends _i1.SmartFake
    implements _i3.DatabaseService {
  _FakeDatabaseService_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeImageStorageService_3 extends _i1.SmartFake
    implements _i4.ImageStorageService {
  _FakeImageStorageService_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLocalDatabaseService_4 extends _i1.SmartFake
    implements _i5.LocalDatabaseService {
  _FakeLocalDatabaseService_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOneDriveService_5 extends _i1.SmartFake
    implements _i6.OneDriveService {
  _FakeOneDriveService_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeImageSyncService_6 extends _i1.SmartFake
    implements _i7.ImageSyncService {
  _FakeImageSyncService_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeServiceFactory_7 extends _i1.SmartFake
    implements _i8.ServiceFactory {
  _FakeServiceFactory_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i9.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i9.Future<_i2.Response>);

  @override
  _i9.Future<_i2.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i9.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i9.Future<_i2.Response>);

  @override
  _i9.Future<_i2.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i9.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i9.Future<_i2.Response>);

  @override
  _i9.Future<_i2.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i9.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i9.Future<_i2.Response>);

  @override
  _i9.Future<_i2.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i9.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i9.Future<_i2.Response>);

  @override
  _i9.Future<_i2.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i9.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i9.Future<_i2.Response>);

  @override
  _i9.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i9.Future<String>.value(
              _i11.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i9.Future<String>);

  @override
  _i9.Future<_i12.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i9.Future<_i12.Uint8List>.value(_i12.Uint8List(0)),
          )
          as _i9.Future<_i12.Uint8List>);

  @override
  _i9.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i9.Future<_i2.StreamedResponse>.value(
              _FakeStreamedResponse_1(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i9.Future<_i2.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AppState].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppState extends _i1.Mock implements _i13.AppState {
  MockAppState() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i14.FVEInstallation> get installations =>
      (super.noSuchMethod(
            Invocation.getter(#installations),
            returnValue: <_i14.FVEInstallation>[],
          )
          as List<_i14.FVEInstallation>);

  @override
  List<_i15.User> get users =>
      (super.noSuchMethod(Invocation.getter(#users), returnValue: <_i15.User>[])
          as List<_i15.User>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get isLoggedIn =>
      (super.noSuchMethod(Invocation.getter(#isLoggedIn), returnValue: false)
          as bool);

  @override
  bool get isPrivileged =>
      (super.noSuchMethod(Invocation.getter(#isPrivileged), returnValue: false)
          as bool);

  @override
  int get currentUserPrivileges =>
      (super.noSuchMethod(
            Invocation.getter(#currentUserPrivileges),
            returnValue: 0,
          )
          as int);

  @override
  _i3.DatabaseService get databaseService =>
      (super.noSuchMethod(
            Invocation.getter(#databaseService),
            returnValue: _FakeDatabaseService_2(
              this,
              Invocation.getter(#databaseService),
            ),
          )
          as _i3.DatabaseService);

  @override
  _i4.ImageStorageService get imageStorageService =>
      (super.noSuchMethod(
            Invocation.getter(#imageStorageService),
            returnValue: _FakeImageStorageService_3(
              this,
              Invocation.getter(#imageStorageService),
            ),
          )
          as _i4.ImageStorageService);

  @override
  _i5.LocalDatabaseService get localDatabaseService =>
      (super.noSuchMethod(
            Invocation.getter(#localDatabaseService),
            returnValue: _FakeLocalDatabaseService_4(
              this,
              Invocation.getter(#localDatabaseService),
            ),
          )
          as _i5.LocalDatabaseService);

  @override
  _i6.OneDriveService get oneDriveService =>
      (super.noSuchMethod(
            Invocation.getter(#oneDriveService),
            returnValue: _FakeOneDriveService_5(
              this,
              Invocation.getter(#oneDriveService),
            ),
          )
          as _i6.OneDriveService);

  @override
  _i7.ImageSyncService get imageSyncService =>
      (super.noSuchMethod(
            Invocation.getter(#imageSyncService),
            returnValue: _FakeImageSyncService_6(
              this,
              Invocation.getter(#imageSyncService),
            ),
          )
          as _i7.ImageSyncService);

  @override
  _i8.ServiceFactory get serviceFactory =>
      (super.noSuchMethod(
            Invocation.getter(#serviceFactory),
            returnValue: _FakeServiceFactory_7(
              this,
              Invocation.getter(#serviceFactory),
            ),
          )
          as _i8.ServiceFactory);

  @override
  int get refreshCounter =>
      (super.noSuchMethod(Invocation.getter(#refreshCounter), returnValue: 0)
          as int);

  @override
  String get currentLanguage =>
      (super.noSuchMethod(
            Invocation.getter(#currentLanguage),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#currentLanguage),
            ),
          )
          as String);

  @override
  _i13.CloudStatus get cloudStatus =>
      (super.noSuchMethod(
            Invocation.getter(#cloudStatus),
            returnValue: _i13.CloudStatus.disconnected,
          )
          as _i13.CloudStatus);

  @override
  bool get isSyncing =>
      (super.noSuchMethod(Invocation.getter(#isSyncing), returnValue: false)
          as bool);

  @override
  String get currentUserPrivilegeName =>
      (super.noSuchMethod(
            Invocation.getter(#currentUserPrivilegeName),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#currentUserPrivilegeName),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void updateCloudStatus(_i13.CloudStatus? status) => super.noSuchMethod(
    Invocation.method(#updateCloudStatus, [status]),
    returnValueForMissingStub: null,
  );

  @override
  void updateSyncStatus(bool? isSyncing) => super.noSuchMethod(
    Invocation.method(#updateSyncStatus, [isSyncing]),
    returnValueForMissingStub: null,
  );

  @override
  _i9.Future<bool> login(String? username, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#login, [username, password]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<void> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> loadInstallations() =>
      (super.noSuchMethod(
            Invocation.method(#loadInstallations, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> loadUsers() =>
      (super.noSuchMethod(
            Invocation.method(#loadUsers, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> addInstallation(_i14.FVEInstallation? installation) =>
      (super.noSuchMethod(
            Invocation.method(#addInstallation, [installation]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> updateInstallation(_i14.FVEInstallation? installation) =>
      (super.noSuchMethod(
            Invocation.method(#updateInstallation, [installation]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> addUser(_i15.User? user) =>
      (super.noSuchMethod(
            Invocation.method(#addUser, [user]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> updateUser(_i15.User? user) =>
      (super.noSuchMethod(
            Invocation.method(#updateUser, [user]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> deactivateUser(int? userId) =>
      (super.noSuchMethod(
            Invocation.method(#deactivateUser, [userId]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> activateUser(int? userId) =>
      (super.noSuchMethod(
            Invocation.method(#activateUser, [userId]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> forceRebuild() =>
      (super.noSuchMethod(
            Invocation.method(#forceRebuild, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> handleLanguageChange(String? languageCode) =>
      (super.noSuchMethod(
            Invocation.method(#handleLanguageChange, [languageCode]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  bool hasRequiredPrivilege(String? requiredPrivilege) =>
      (super.noSuchMethod(
            Invocation.method(#hasRequiredPrivilege, [requiredPrivilege]),
            returnValue: false,
          )
          as bool);

  @override
  void addListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i16.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [ConfigService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigService extends _i1.Mock implements _i17.ConfigService {
  MockConfigService() {
    _i1.throwOnMissingStub(this);
  }
}
